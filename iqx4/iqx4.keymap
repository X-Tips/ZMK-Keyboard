/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

/ {
	keymap0: keymap {
		compatible = "zmk,keymap";

		default_layer {
            // |  +  |  7  |  8  |  9  |   Q   |   W   |   E   |   R   |   T   |  VolU |  Play |   Y   |   U   |   I   |   O   |   P   |
            // |  -  |  4  |  5  |  6  |   A   |   S   |   D   |   F   |   G   |  VolD |  Next |   H   |   J   |   K   |   L   |  Ent  |
            // |  *  |  1  |  2  |  3  |   Z   |   X   |   C   |   V   |   B   |   ^V  |   ^Z  |   N   |   M   |  5 ,  |  6 .  |  BS   |
            // |  /  |  .  |  0  | Ent | LWin  |  LAlt | LCtrl | MO(1) | LSht  |   ^C  |   ^X  | SPACE | MO(2) | 3,ESC | 3,TAB |  Del  | 
            bindings = <
            &kp KP_PLUS      &kp N7     &kp N8    &kp N9       &kp Q     &kp W     &kp E      &kp R       &kp T     &none      &none       &kp Y      &kp U   &kp I          &kp O       &kp P    
            &kp KP_MINUS     &kp N4     &kp N5    &kp N6       &kp A     &kp S     &kp D      &kp F       &kp G     &none      &none       &kp H      &kp J   &kp K          &kp L       &kp ENTER
            &kp KP_MULTIPLY  &kp N1     &kp N2    &kp N3       &kp Z     &kp X     &kp C      &kp V       &kp B     &kp LC(V)  &kp LC(Z)   &kp N      &kp M   &lt 5 COMMA    &lt 6 DOT   &kp BSPC 
            &kp KP_SLASH     &kp KP_DOT &kp N0    &kp KP_ENTER &kp LWIN  &kp LALT  &kp LCTRL  &lt 1 SPACE &kp LSHFT &kp LC(C)  &kp LC(X)   &kp SPACE  &mo 2   &lt 3 ESC      &lt 4 TAB   &kp DEL  
            >;
		};

		fn1_layer {
            // | --- | --- | --- | --- |   7   |   8   |   9   |   .   |   +   |  ---  |  ---  |   *   |   $   |   :   |   |   |   `   |
            // | --- | --- | --- | --- |   4   |   5   |   6   |   0   |   -   |  ---  |  ---  |   /   |   #   |   {   |   }   |   ;   |
            // | --- | --- | --- | --- |   1   |   2   |   3   |  BS   |   =   |  Del  |   ^Y  |   \   |   &   |   <   |   >   |   '   |
            // | --- | --- | --- | --- | LWin  |  LAlt | LCtrl | TO(0) | LSht  |  Esc  |  Tab  |  CAPS | #Spc  |  ^!+  |  ^!+  |  ^!+  |
            bindings = <
            &none   &none   &none   &none   &kp N7    &kp N8    &kp N9    &kp KP_DOT &kp KP_PLUS         &none    &none     &kp KP_MULTIPLY  &kp DLLR      &kp COLON      &kp PIPE       &kp GRAVE  
            &none   &none   &none   &none   &kp N4    &kp N5    &kp N6    &kp N0     &kp KP_MINUS        &none    &none     &kp KP_SLASH     &kp HASH      &kp LBRC       &kp RBRC       &kp SEMI   
            &none   &none   &none   &none   &kp N1    &kp N2    &kp N3    &kp BSPC   &kp EQUAL           &kp DEL  &kp LC(Y) &kp BSLH         &kp AMPS      &kp LT         &kp GT         &kp SQT  
            &none   &none   &none   &none   &kp LWIN  &kp LALT  &kp LCTRL &to 0      &mt LSHFT KP_ENTER  &kp ESC  &kp TAB   &kp CAPS         &kp LG(SPACE) &kp LA(LG(N8)) &kp LA(LG(N9)) &kp LA(LG(N0))    
             >;
		};

		fn2_layer {
            // | --- | --- | --- | --- |   ~   |   %   |   _   |   ^   |   +   |  ---  |  ---  |   *   |  Home |   Up  |  End  | PgUp  |
            // | --- | --- | --- | --- |   @   |   "   |   !   |   ?   |   -   |  ---  |  ---  |   /   |  Left |   Dn  | Right | PgDn  |
            // | --- | --- | --- | --- |   [   |   ]   |   '   |   &   |   =   |  #Dn  |  #Up  |   \   | +Left |  +Up  |+Right | !#BS  |
            // | --- | --- | --- | --- | LWin  |  LAlt | LCtrl | MO(8) | LSht  | #Left | #Right|  CAPS | TO(0) |  +Dn  |  ---  | !#Del |
            bindings = <
            &none   &none   &none   &none  &kp TILDE &kp PRCNT &kp UNDER &kp CARET  &kp PLUS   &none         &none          &kp STAR   &kp HOME      &kp UP       &kp END         &kp PG_UP 
            &none   &none   &none   &none  &kp AT    &kp DQT   &kp EXCL  &kp QMARK  &kp MINUS  &none         &none          &kp SLASH  &kp LEFT      &kp DOWN     &kp RIGHT       &kp PG_DN 
            &none   &none   &none   &none  &kp LBKT  &kp RBKT  &kp LPAR  &kp RPAR   &kp EQUAL  &kp LG(MINUS) &kp LG(EQUAL)  &kp BSLH   &kp LS(LEFT)  &kp LS(UP)   &kp LS(RIGHT)   &kp RA(RG(BSPC))  
            &none   &none   &none   &none  &kp LWIN  &kp LALT  &kp LCTRL &none      &kp LSHFT  &kp LG(ESC)   &kp LG(ESC)    &none      &to 0         &kp LS(DOWN) &none           &kp RA(RG(DEL))    
            >;
		};

		fn3_layer {
            bindings = <
		&none   &none   &none   &none   &bt BT_SEL 1  &kp RA(RG(W))  &kp RA(RG(E))  &kp RA(RG(R))  &kp RA(RG(T))   &none         &none          &kp LA(F4)       &kp LA(TAB)  &mkp LCLK         &kp RA(RG(UP))     &mkp RCLK           
		&none   &none   &none   &none   &bt BT_SEL 2  &kp RA(RG(S))  &kp RA(RG(D))  &kp RA(RG(F))  &kp RA(RG(G))   &none         &none          &kp LC(W)        &kp LC(T)    &kp RA(RG(LEFT))  &kp RA(RG(DOWN))   &kp RA(RG(RIGHT))         
		&none   &none   &none   &none   &bt BT_CLR    &kp RA(RG(X))  &kp RA(RG(C))  &kp RA(RG(V))  &kp RA(RG(B))   &kp LG(DOWN)  &kp LG(UP)     &kp LC(LS(TAB))  &kp LC(TAB)  &mkp MB4          &mkp MB5           &kp PG_UP       
            &none   &none   &none   &none   &kp LWIN      &kp LALT       &kp LCTRL      &kp RA(RG(N4)) &kp LSHFT       &kp LG(LEFT)  &kp LG(RIGHT)  &kp LA(HOME)     &kp LC(R)    &to 0             &mkp MB3           &kp PG_DN    
            >;
		};
		
		fn4_layer {
            bindings = <
            &none   &none   &none   &none  &kp LC(LA(LG(Q)))  &kp F21  &kp F22   &kp F23             &kp F24    &none         &none         &kp F9               &kp F10             &kp F11               &kp F12   &kp LC(LA(LG(P)))
            &none   &none   &none   &none  &kp LC(LA(LG(A)))  &kp F17  &kp F18   &kp F19             &kp F20    &none         &none         &kp F5               &kp F6              &kp F7                &kp F8    &kp LC(LA(LG(ENTER)))
            &none   &none   &none   &none  &kp LC(LA(LG(Z)))  &kp F13  &kp F14   &kp F15             &kp F16    &kp LC(MINUS) &kp LC(PLUS)  &kp F1               &kp F2              &kp F3                &kp F4    &kp LC(LA(LG(BSPC)))
            &none   &none   &none   &none  &kp LWIN           &kp LALT &kp LCTRL &kp LC(LA(LG(N4)))  &kp LSHFT  &kp LC(N0)    &kp LC(N0)    &kp LC(LA(LG(N6)))   &kp LC(LA(LG(N7)))  &kp LC(LA(LS(SLASH))) &to 0     &kp LC(LA(LG(N0)))    
            >;
		};

		fn5_layer {
            bindings = <
		&none   &none   &none   &none   &kp LS(LC(LA(LG(Q))))  &kp LS(LC(LA(LG(W))))  &kp LS(LC(LA(LG(E))))  &kp LS(LC(LA(LG(R))))  &kp LS(LC(LA(LG(T))))   &none   &none   &kp LS(LC(LA(MINUS)))   &kp LS(LC(LA(EQUAL)))   &kp INS          &kp K_CMENU             &kp KP_NLCK         
		&none   &none   &none   &none   &kp LS(LC(LA(LG(A))))  &kp LS(LC(LA(LG(S))))  &kp LS(LC(LA(LG(D))))  &kp LS(LC(LA(LG(F))))  &kp LS(LC(LA(LG(G))))   &none   &none   &kp C_VOL_DN            &kp C_VOL_UP            &kp PAUSE_BREAK  &kp PSCRN               &kp SLCK      
		&none   &none   &none   &none   &kp LS(LC(LA(LG(Z))))  &kp LS(LC(LA(LG(X))))  &kp LS(LC(LA(LG(C))))  &kp LS(LC(LA(LG(V))))  &kp LS(LC(LA(LG(B))))   &none   &none   &kp C_PREV              &kp C_NEXT              &to 0            &kp RS(RC(X))           &kp RS(RC(O))        
		&none   &none   &none   &none   &kp LS(LC(LA(LG(N1)))) &kp LS(LC(LA(LG(N2)))) &kp LS(LC(LA(LG(N3)))) &kp LS(LC(LA(LG(N4)))) &kp LS(LC(LA(LG(N5))))  &none   &none   &kp C_MUTE              &kp C_PP                &mo 7            &kp LS(LC(LA(LG(N9))))  &kp LS(LC(LA(LG(N0))))       
            >;
		};
		
		fn6_layer {
            bindings = <
		&none   &none   &none   &none   &kp LS(LC(LA(Q)))  &kp LS(LC(LA(W)))  &kp LS(LC(LA(E)))  &kp LS(LC(LA(R)))  &kp LS(LC(LA(T)))   &none   &none   &kp LS(LC(LA(Y)))  &kp LS(LC(LA(U)))  &kp LS(LC(LA(I)))     &kp LS(LC(LA(O)))   &kp LS(LC(LA(P)))         
		&none   &none   &none   &none   &kp LS(LC(LA(A)))  &kp LS(LC(LA(S)))  &kp LS(LC(LA(D)))  &kp LS(LC(LA(F)))  &kp LS(LC(LA(G)))   &none   &none   &kp LS(LC(LA(H)))  &kp LS(LC(LA(J)))  &kp LS(LC(LA(K)))     &kp LS(LC(LA(L)))   &kp LS(LC(LA(ENTER)))      
		&none   &none   &none   &none   &kp LS(LC(LA(Z)))  &kp LS(LC(LA(X)))  &kp LS(LC(LA(C)))  &kp LS(LC(LA(V)))  &kp LS(LC(LA(B)))   &none   &none   &kp LS(LC(LA(N)))  &kp LS(LC(LA(M)))  &kp LS(LC(LA(COMMA))) &to 0               &kp LS(LC(LA(BSPC)))       
		&none   &none   &none   &none   &kp LS(LC(LA(N1))) &kp LS(LC(LA(N2))) &kp LS(LC(LA(N3))) &kp LS(LC(LA(N4))) &kp LS(LC(LA(N5)))  &none   &none   &kp LS(LC(LA(N6))) &kp LS(LC(LA(N7))) &kp LS(LC(LA(N8)))    &kp LS(LC(LA(N9)))  &kp LS(LC(LA(N0)))       
            >;
		};
		
		fn7_layer {
            bindings = <
		&none   &none   &none   &none   &kp LA(LG(Q))  &kp LA(LG(W))  &kp LA(LG(E))  &kp LA(LG(R))  &kp LA(LG(T))   &none   &none   &kp LA(LG(Y))  &kp LA(LG(U))  &kp LA(LG(I))     &kp LA(LG(O))         &kp LA(LG(P))         
		&none   &none   &none   &none   &kp LA(LG(A))  &kp LA(LG(S))  &kp LA(LG(D))  &kp LA(LG(F))  &kp LA(LG(G))   &none   &none   &kp LA(LG(H))  &kp LA(LG(J))  &kp LA(LG(K))     &kp LA(LG(L))         &kp LA(LG(ENTER))      
		&none   &none   &none   &none   &kp LA(LG(Z))  &kp LA(LG(X))  &kp LA(LG(C))  &kp LA(LG(V))  &kp LA(LG(B))   &none   &none   &kp LA(LG(N))  &kp LA(LG(M))  &kp LA(LG(COMMA)) &kp LA(LG(DOT))       &kp LA(LG(BSPC))       
		&none   &none   &none   &none   &kp LA(LG(N1)) &kp LA(LG(N2)) &kp LA(LG(N3)) &kp LA(LG(N4)) &kp LA(LG(N5))  &none   &none   &kp LA(LG(N6)) &bootloader    &to 0             &kp LS(LC(LA(LBRC)))  &kp LS(LC(LA(RBRC)))       
            >;
		};
		
		fn8_layer {
            bindings = <
            &none   &none   &none   &none   &kp Q     &kp W     &kp E      &kp R   &kp T     &none      &none     &kp KP_PLUS      &kp N7              &kp N8    &kp N9    &kp KP_DOT    
            &none   &none   &none   &none   &kp A     &kp S     &kp D      &kp F   &kp G     &none      &none     &kp KP_MINUS     &kp N4              &kp N5    &kp N6    &kp N0
            &none   &none   &none   &none   &kp Z     &kp X     &kp C      &kp V   &kp B     &kp LC(V)  &kp LC(Z) &kp KP_MULTIPLY  &kp N1              &kp N2    &kp N3    &kp BSPC 
            &none   &none   &none   &none   &kp LWIN  &kp LALT  &kp LCTRL  &to 0   &kp LSHFT &kp LC(C)  &kp LC(X) &kp KP_SLASH     &mt LSHFT KP_ENTER  &lt 3 ESC &lt 4 TAB &kp DEL  
            >;
		};
	};
};
